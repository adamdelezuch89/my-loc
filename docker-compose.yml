services:
  backend:
    build:
      context: ./backend
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
    depends_on:
      - db
    networks:
      - myloc-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app  
    networks:
      - myloc-network
    depends_on:
      - backend

  db:
    image: postgis/postgis:17-3.4
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    networks:
      - myloc-network

volumes:
  dev-db-data:

networks:
  myloc-network:
    driver: bridge